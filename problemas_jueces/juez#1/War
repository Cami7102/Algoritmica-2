#include <bits/stdc++.h>
#define input freopen("in.txt", "r", stdin)
#define output freopen("out.txt", "w", stdout)
using namespace std;

int padre[20010];
int rango[20010];
int x;

void init (){
    for(int i = 0; i <= 20010; i++){
        padre[i] = i;
        rango[i] = i;
    }
}

int find(int c){
    if(c == padre[c]){
        return c;
    }
    else{
        padre[c] = find(padre[c]);
        return padre[c];
    }
}

void unionRango(int x,int y) { 
    int xRaiz = find(x);
    int yRaiz = find(y);
    if(rango[xRaiz] > rango[yRaiz]) {
        padre[yRaiz] = xRaiz;
    } else {
        padre[xRaiz] = yRaiz;
        if(rango[xRaiz] == rango[yRaiz]) {
            rango[yRaiz]++;
        }
    }
}

int arrayF(int c){
    return c + x;
}

int main(){
    input;
    output;
    
    while(scanf("%d", &x)==1){
        init();
        int ope, x, y;
        while(scanf("%d %d %d", &ope, &x, &y)==3){
            if(ope == 0 && x == 0 && y == 0){
                break;
        }
        if(ope == 1){
            if(find(x) == find(arrayF(y)) || find(y) == find(arrayF(x))){
                cout << -1 << endl;
            }else{
                unionRango(x, y);
                unionRango(arrayF(x), arrayF(y));
            }
        }else if(ope == 2){
            if(find(x) == find(y) || find(arrayF(x)) == find(arrayF(y))){
                cout << -1 << endl;
            }else{
                unionRango(x, arrayF(y));
                unionRango(y, arrayF(x));
            }
        }else if(ope == 3){
            if(find(x) == find(y) || find(arrayF(x)) == find(arrayF(y))){
                cout << 1 << endl;
            }else{
                cout << 0 << endl;
            }
        }else{
            if(find(x) == find(arrayF(y)) || find(y) == find(arrayF(x))){
                cout << 1 << endl;
            }
            else{
                cout << 0 << endl;
            }
        }
        }
    }
    return 0;
}
